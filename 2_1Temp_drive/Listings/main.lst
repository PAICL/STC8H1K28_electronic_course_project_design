C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 15:31:03 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*=============================================================
   2          本项目基于STC8H1K28
   3          
   4          该项目需要 [显示模块TM1650] 以及 [温度传感器DS18B20]
   5          [显示模块TM1650] 为 [IIC] 传输协议
   6          引脚接口为 [SDA],[SCL],[GND],[VDD]
   7          连接说明如下
   8          [TM1650]    [开发板]
   9            [SDA]----->[P14]
  10            [SCL]----->[P15]
  11            [GND]----->[GND]
  12            [VDD]----->[3.3v]
  13          
  14          [温度传感器DS18B20]引脚接口为[VDD],[OUT],[GND]
  15          (有些学校温度传感器开发板对应为[+], [out],[-],请自行转换)
  16          连接说明如下
  17          [DS18B20]   [开发板]
  18            [VDD]----->[3.3]
  19            [OUT]----->[P23]
  20            [GND]----->[GND]
  21          
  22          烧录时需要注意将频率设置为[6.00MHz],否则无法运行
  23          
  24          Data:2024/10/19
  25          *///===========================================================
  26          
  27          #include "stc8h.h"
  28          #include "intrins.h"
  29          //6MHz
  30          
  31          //==========IO_Init============
  32          sbit key1 = P3 ^ 2;
  33          sbit key2 = P3 ^ 3;
  34          
  35          void IO_Init()
  36          {
  37   1          P0M0 = 0x00;
  38   1          P0M1 = 0x00;
  39   1          P2M0 = 0x00;
  40   1          P2M1 = 0x00;
  41   1          P3M0 = 0x00;
  42   1          P3M1 = 0x00;
  43   1      }
  44          //=========IO_Init============
  45          
  46          //=============delay==========
  47          // 微秒级延迟函数
  48          void delay_us(unsigned int us)
  49          {
  50   1          while (us--)
  51   1          {
  52   2              _nop_();
  53   2          }
  54   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 15:31:03 PAGE 2   

  55          
  56          // 毫秒级延迟函数
  57          void delay_ms(unsigned int ms)
  58          {
  59   1          while (ms--)
  60   1          {
  61   2              delay_us(1000);
  62   2          }
  63   1      }
  64          
  65          //==========delay============
  66          
  67          //==========DS18B20===========
  68          
  69          unsigned char TMPL, TMPH;
  70          sbit DQ = P2 ^ 3;
  71          
  72          // DS18B20复位
  73          unsigned DS18B20_Reset()
  74          {
  75   1          unsigned char x;
  76   1          DQ = 1;
  77   1          DQ = 0;
  78   1          delay_us(700);
  79   1          DQ = 1;
  80   1          delay_us(30);
  81   1          x = DQ;
  82   1          while (!DQ)
  83   1              ;
  84   1          return x;
  85   1      }
  86          
  87          // DS18B20读一位数据函数
  88          unsigned DS18B20_readbit()
  89          {
  90   1          bit x;
  91   1          unsigned i;
  92   1          DQ = 1;
  93   1          i++;
  94   1          DQ = 0;
  95   1          delay_us(6);
  96   1          DQ = 1;
  97   1          i++;
  98   1          i++;
  99   1          x = DQ;
 100   1          delay_us(50);
 101   1          return (x);
 102   1      }
 103          
 104          // DS18B20写一位函数
 105          void DS18B20_writebit(unsigned aa)
 106          {
 107   1          unsigned char i;
 108   1          DQ = 1;
 109   1          i++;
 110   1          DQ = 0;
 111   1          i++;
 112   1          DQ = aa;
 113   1          delay_us(50);
 114   1          DQ = 1;
 115   1      }
 116          
C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 15:31:03 PAGE 3   

 117          // DS18B20读一个字节函数
 118          unsigned DS18B20_readbyte()
 119          {
 120   1          unsigned i, j, dat;
 121   1          dat = 0;
 122   1          j = 1;
 123   1          for (i = 0; i < 8; i++)
 124   1          {
 125   2              if (DS18B20_readbit())
 126   2              {
 127   3                  dat = dat + (j << i);
 128   3              }
 129   2          }
 130   1          return (dat);
 131   1      }
 132          
 133          // DS18B20写一个字节函数
 134          void DS18B20_writebyte(unsigned char dat)
 135          {
 136   1          unsigned int temp;
 137   1          unsigned char j;
 138   1          for (j = 0; j < 8; j++)
 139   1          {
 140   2              temp = dat >> j;
 141   2              temp = temp & 0x01;
 142   2              DS18B20_writebit(temp);
 143   2          }
 144   1      }
 145          
 146          // DS18b20读供电方式
 147          bit DS18B20_readpower()
 148          {
 149   1          bit x;
 150   1          while (DS18B20_Reset())
 151   1              ;
 152   1          DS18B20_writebyte(0xcc);
 153   1          DS18B20_writebyte(0xb4);
 154   1          x = DQ;
 155   1          delay_us(10);
 156   1          return x;
 157   1      }
 158          
 159          // DS18B20精度设置函数
 160          void DS18B20_SetResolution(unsigned char res)
 161          {
 162   1          switch (res)
 163   1          {
 164   2          case 9:
 165   2              res = 0;
 166   2              break;
 167   2          case 10:
 168   2              res = 1;
 169   2              break;
 170   2          case 11:
 171   2              res = 2;
 172   2              break;
 173   2          case 12:
 174   2              res = 3;
 175   2              break;
 176   2          }
 177   1          while (DS18B20_Reset())
 178   1              ;
C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 15:31:03 PAGE 4   

 179   1          DS18B20_writebyte(0x4e);
 180   1          DS18B20_writebyte(0xff);
 181   1          DS18B20_writebyte(0xff);
 182   1          DS18B20_writebyte(0x1f | (res << 5));
 183   1      }
 184          
 185          // DS18B20温度读取函数
 186          long DS18B20_GetTemperature()
 187          {
 188   1          long Temp;
 189   1          while (DS18B20_Reset())
 190   1              ;
 191   1          DS18B20_writebyte(0xcc);
 192   1          DS18B20_writebyte(0x44);
 193   1          while (DS18B20_Reset())
 194   1              ;
 195   1          DS18B20_writebyte(0xcc);
 196   1          DS18B20_writebyte(0xbe);
 197   1          TMPL = DS18B20_readbyte();
 198   1          TMPH = DS18B20_readbyte();
 199   1          Temp = TMPH << 8 | TMPL;
 200   1          Temp = Temp * 0.0625;
 201   1          return Temp;
 202   1      }
 203          
 204          //==========DS18B20====================
 205          
 206          //====================TM1650=======================
 207          unsigned int tab[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66,        // 0,1,2,3,4
 208                                0x6D, 0x7D, 0x07, 0x7F, 0x6F,        // 5,6,7,8,9
 209                                0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71}; // A,B,C,D,E,F
 210          
 211          bit busy; // 全局变量
 212          
 213          /***********初始化***********/
 214          void I2C_init()
 215          {
 216   1          P_SW2 = 0x80; // 允许访问扩展的SFR
 217   1          P1M1 = 0;
 218   1          P1M0 = 0;
 219   1          I2CCFG = 0xe0;  // 允许I2C，主机模式，等待时钟数16
 220   1          I2CMSST = 0x00; // 清空状态标志位
 221   1          EA = 1;         // 开总中断
 222   1      }
 223          
 224          /***********开始信号***********/
 225          void Start()
 226          {
 227   1          busy = 1;
 228   1          I2CMSCR = 0x81; // 发送START命令
 229   1          while (busy)
 230   1              ;
 231   1      }
 232          
 233          /***********发送一个字节数据***********/
 234          void SendData(unsigned char dat)
 235          {
 236   1          I2CTXD = dat; // 写数据到数据缓冲区
 237   1          busy = 1;
 238   1          I2CMSCR = 0x82; // 发送SEND命令
 239   1          while (busy)
 240   1              ;
C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 15:31:03 PAGE 5   

 241   1      }
 242          
 243          /***********等待接收从机返回接收成功的信号***********/
 244          void RecvACK()
 245          {
 246   1          busy = 1;
 247   1          I2CMSCR = 0x83; // 发送读ACK命令
 248   1          while (busy)
 249   1              ;
 250   1      }
 251          
 252          /***********停止信号***********/
 253          void Stop()
 254          {
 255   1          busy = 1;
 256   1          I2CMSCR = 0x86; // 发送STOP命令
 257   1          while (busy)
 258   1              ;
 259   1      }
 260          
 261          /***********中断，清除标志位***********/
 262          void I2C_Isr() interrupt 24
 263          {
 264   1          if (I2CMSST & 0x40)
 265   1          {
 266   2              I2CMSST &= ~0x40; // 清中断标志
 267   2              busy = 0;
 268   2          }
 269   1      }
 270          
 271          //=========================
 272          // 描述：TM1650写函数
 273          // 参数：add：地址；dat：数据
 274          // 返回：none
 275          //==========================
 276          void TM1650_write_data(unsigned int add, unsigned int dat)
 277          {
 278   1          Start();
 279   1          SendData(add); // 添加发送地址
 280   1          RecvACK();
 281   1          SendData(dat);
 282   1          RecvACK();
 283   1          Stop();
 284   1      }
 285          
 286          //=========================
 287          // 描述：TM1650初始化
 288          // 参数：none
 289          // 返回：none
 290          //========================
 291          void TM1650_Init()
 292          {
 293   1          I2C_init();
 294   1          TM1650_write_data(0x48, 0x31); // 开显示、8段显示方式、3级亮度
 295   1      }
 296          
 297          //=========================
 298          // 描述：TM1650清除
 299          // 参数：none
 300          // 返回：none
 301          //========================
 302          void TM1650_clear()
C51 COMPILER V9.60.7.0   MAIN                                                              10/21/2024 15:31:03 PAGE 6   

 303          {
 304   1          unsigned char i;
 305   1          for (i = 0; i < 4; i++)
 306   1          {
 307   2              TM1650_write_data(0x68 + i * 2, 0);
 308   2          }
 309   1      }
 310          //===========TM1650=====================
 311          
 312          void main()
 313          {
 314   1          long temperature;
 315   1          IO_Init();
 316   1          TM1650_Init();
 317   1          TM1650_clear();
 318   1          DS18B20_readpower();
 319   1          DS18B20_SetResolution(12);
 320   1          delay_ms(100);
 321   1          delay_us(1);
 322   1      
 323   1          while (1)
 324   1          {
 325   2              temperature = DS18B20_GetTemperature();
 326   2              TM1650_write_data(0x68, tab[(temperature / 1000) % 10]); // 显示千位
 327   2              TM1650_write_data(0x6A, tab[(temperature / 100) % 10]);  // 显示百位
 328   2              TM1650_write_data(0x6C, tab[(temperature / 10) % 10]);   // 显示十位
 329   2              TM1650_write_data(0x6E, tab[temperature % 10]);
 330   2      
 331   2              P00 = 0; 
 332   2              delay_ms(100);
 333   2              P00 = 1;
 334   2              delay_ms(100);
 335   2      
 336   2              P01 = 0;
 337   2              delay_ms(100);
 338   2              P01 = 1;
 339   2              delay_ms(100);
 340   2      
 341   2              P02 = 0;
 342   2              delay_ms(100);
 343   2              P02 = 1;
 344   2              delay_ms(100);
 345   2          }
 346   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    806    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
